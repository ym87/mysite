version: '3.5'

services:
  # Postgres container
  db:
    container_name: db
    # Getting official postgres image
    image: postgres
    # Taking password, databasename, etc from the env variables file
    env_file: ./backend/.env
    # Creating a volume to preserve database data
    volumes:
      - .db:/var/lib/postgresql/data
    ports:
      - "${PGADMIN_PORT:-5432}:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped

  broker:
    image: "rabbitmq:alpine"

  result:
    image: "redis:alpine"

  frontend:
    build:
      dockerfile: frontend/Dockerfile
      context: .
    volumes:
      - .:/app/
      - /app/node_modules
    ports:
      - "3000:3000"

  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      - result
      - frontend

  celery:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: python manage.py celery
    volumes:
      - ./backend/:/home/user/app/
    env_file: backend/.env
    depends_on:
      - db
      - broker
      - result
